Final Examp : Developer

1. Question: Which type of Sort chooses one element, finds the smallest element, and then makes the smallest element as the first element?
	[ ] Quick Sort
	[ ] Shell Sort
	[ ] Bubble Sort
	[x] Selection Sort

2. Question: Which of the following component of a graph indicates some types of directionality exists in the relationship between the nodes?
	[ ] Single Vertex
	[x] Directed Edge
	[ ] Undirected Edge
	[ ] Multiple Vertices

3. Question :With the given code, what is likely to happen if the interrupt flag has not been set?
		20 @Override
		21 public void run() {
		22
		23 String threadName = Thread.currentThread().getName();
		24
		25 try {
		26
		27 for(String urlString : urlsList) {
		28
		29 if (Thread.currentThread().isInterrupted()) {
		30 Throw new InterToptedExcepcion(read.currentThread().getName() + “interrupted”);
		31
		32 }
		33
		34 URL url = new URL(urlString);
		35 String filename = urlString.substring(urlString.lastIndex0f(“/”) + 1) .trim() + ".html";
		36 BufferedReader reader = new BufferedReader(new InputStreamReader(url.openStream()));
		37 BufferedWriter writer = new BufferedWriter(new FileWriter(fiIename));
		38
		39 String line;
		40 while ((line = reader. readLine()) != null) {
		41 writer.write(line) ;
		42 }
		43 System.out.println(threadName + " has downloaded " + filename) ;
	[x] You proceed to the downloading of the page
	[ ] You proceed to open the page
	[ ] You proceed to copy the page
	[ ] You proceed to read the page


4. In the Binary Search Tree, what is the maximum number of children can a node has?
	[x] 2
	[ ] 1
	[ ] 4
	[ ] 3
	[ ] As many as required

5. Question You need to execute the following code:
		01 package com.skillsoft.concurrency;
		02
		03 public class ThreadLifeCycle {
		04
		05 public static class Walk implements Runnable {
		06
		07 @Override
		08 public void run() {
		09
		10 for (int i = 1; i < 5; i++) {
		11
		12 try {
		13 Thread.sleep(3000);
		14 }
		15 catch (InterruptedException e) {
		16 e.printStackTrace();
		17 }
		18
		19 System.out.println(“I’m walking...");
		20 }
		21 }
		22 }
		23
		24 }
	In this code, what is the purpose of using the runnable interface on line 5?
	[ ] It will create four different threads for the Walk class
	[x] It will execute the Walk class in a separate thread
	[ ] It makes the class executable
	[ ] It will execute the Walk class in an existing thread

6. Question : What is the outcome of the code on line 17?
		11 }
		12
		13 @Override
		14 public void run() {
		15 try {
		16
		17 rOne.rOneLock.lock();
		18
		19 System.out.println(“Lockdown acquired on ResourceOne by “ + Thread.currentThread().getName());
		20
		21 rOne.myVar++;
		22 Thread.sleep(1000);
		23
		24 rTwo.rTwoLock.lock();
		25
		26 System.out.println(“Lockdown acquired on ResourceTwo by “ + Thread.currentThread().getName());
		27
		28 rTwo.myVar—;
		29 Thread.sleep(1000);
		30
		31 rOne.rOneLock.unlock();
		32
		33 System.out.println(“Lock on ResourceOne released by “ + Thread.currentThread().getName());
		34
		35 rTwo.rTwoLock.unlock();
		36
	[ ] It is creating a new lock for the threads
	[ ] The lock method is being called
	[ ] A new lock with the name rOneLock is initialized
	[x] It is requesting a lock on rOne resource		
	
7. Which of the following types of the graph does the Shortest Path algorithm works with?
	[ ] Looped graphs
	[ ] Weighted graphs
	[ ] Adjacency Matrix graphs
	[x] Unweighted graphs	
	
8. 	When performing the Breadth-first traversal, which of the following tasks are you likely to perform?
	[ ] The traversal is limited to only one level of nodes in a tree
	[x] You visit every node at one level before moving to the next level
	[ ] The traversal can start at any level of the tree
	[ ] The traversal takes place by visiting a node and its child nodes
	
9. You need to mirror a binary tree that has A as the root node. It has B as sub-tree in the left and C as the right sub-tree. The C sub-tree has two more sub-trees, which are D and E.
	What will be the outcome when you mirror them?
	[x] The left nodes will move to the right, and the right nodes will move to the left
	[ ] Only the B and C subtrees will swap their positions
	[ ] Each node will resume the same position in the mirror image
	[ ] You cannot mirror a binary tree	
	
10. In the Heapify operation, which of the following statement describes the Sift Down operation?
	[x] Moving a wrongly placed element down in a heap towards the leaf node to find the correct position
	[ ] Moving a wrongly placed element left in a heap towards the adjacent node to find the correct position
	[ ] Moving a wrongly placed element up in a heap towards the root node to find the correct position
	[ ] Moving a wrongly placed element right in a heap towards the adjacent node to find the correct position	
	
11. In an unweighted graph, how many times can you revisit a vertex?
	[ ] 2
	[x] 1
	[ ] As many times as required
	[ ] 0
	[ ] 4	

12. Which of the following statements are correct for the adjacency list? [Choose all that apply.]
	[ ] A node can contain only data
	[x] Each vertex is a node
	[ ] A linked list contains only its vertices
	[x] It points to a linked list	
	
13. Question : In the given code, how many variables will all instances of the Looper class will share?
		01 package com.skillsoft.concurrency;
		02
		03 public class Looper implements Runnable {
		04
		05 public static boolean keepLooping = true;
		06 public static int number = 0;
		07
		08 public int localNum = 0;
		09
		10 @Override
		11 public void run() {
		12
		13 String threadName = Thread.currentThread().getName();
		14
		15 while(keepLooping) {
		16
		17 if (localNum != number) {
		18 System.out.println(threadName + “has picked up the change in number”);
		19 localNum = number;
		20 }
		21 }
		22
		23 System.out.println(threadName + " is done!");
		24 }
		25
		26
	[ ] 1
	[x] 2
	[ ] 4
	[ ] 3	
	
14. Which is the value to which the weight of all edges equals in an unweighted graph?
	[ ] 2
	[ ] 0
	[ ] 4
	[x] 1	
	
15. Which of the following Sort focuses on the pivot rather than the length of a list of the artificial index?
	[ ] Bubble Sort
	[ ] Shell Sort
	[ ] Selection Sort
	[ ] Insertion Sort
	[x] Quick Sort
	[ ] Quick Sort	
	
16. Question: In the given code, which element is being focused on, line 21, which is inner for loop?
		15 public static void insertionSort(int[] listToSort) {
		16
		17 for (int i = 0; i < listToSort.length – 1; i++) {
		18
		19 System.out.println(“\ni = “ + i);
		20
		21 for (int j = i+1; j > 0 ; j--) {
		22
		23 if (listToSort [j] < listToSort[j - 1]) {
		24
		25 swap(IistToSort, j, j - 1);
		26
		27 System.out.print("Swapping: “ + j + “ and” + (j-1) + “ “ );
		28
		29 System.out.println(Arrays.toString(listToSort));
		30
		31 } else {
		32
		33 break;
		34 }
		35 }
		36 }
	[ ] It focuses on the last element in the sorted portion in the array
	[x] It focuses on the first element in the unsorted portion in the array
	[ ] It focuses on the first element in the sorted portion in the array
	[ ] It focuses on the last element in the unsorted portion in the array	
	
17. In a binary tree, which of the following statement correctly defines the max depth?
	[ ] It is the distance between the leaf node to its sub-tree
	[x] It is the furthest distance from the leaf node to the root
	[ ] It is the distance between the root node to the immediate sub-tree
	[ ] It is the distance between two sub-trees under the root node	
	
18. Question : In the given code:
		15 public static void bubbleSort(int[] listToSort) {
		16
		17 for (int i = listToSort.length – 1; i>0; i--) {
		18
		19 System.out.println(“\ni= “ + i);
		20
		21 for (int j = 0; j < i; j++) {
		22
		23 if (listToSort [j] > listToSort[j + 1]) {
		24
		25 swap(IistToSort, j, j + 1);
		26
		27 System.out.print("Swapping: “ + j + “ and” + (j+1) + “ “ );
		28
		29 System.out.println(Arrays.toString(listToSort));
		30 }
		31 }
		32
		33 }
		34 }
	What is the intent of lines 23 to 25?
	[ ] It will create a list of sorted elements from larger to smaller in size
	[ ] It will compare an element with a previous one and swap if the element is larger than the previous one
	[ ] It will continue to read from the given list of elements and align them as they are listed
	[x] It will compare an element with the next one and swap these elements if the element is larger than the next one	
	
19. Which of the following problem can arise with the use of shared resources in Java?
	[ ] High resource utilization
	[ ] Multiple thread execution
	[ ] Race conditions
	[x] Deadlocks	
	
20. In a binary heap implementation, how many pointers would a node require?
	[x] 3
	[ ] 2
	[ ] 5
	[ ] 1	
	
21. Within a sorted list, which element is selected as the starting point by the Binary Search?
	[x] The midpoint element in the list
	[ ] The first element in the list
	[ ] Any random element in the list
	[ ] The last element in the list	

22. When referring to a priority queue, which of the operation must be performed first before you can access an element?
	[ ] Remove the elements with the higher priority
	[ ] Measure the list with the elements
	[ ] Access the element with higher priority
	[x] Insert the element with the priority assigned	
	
23. Which of the following conditions can cause a deadlock? [Choose all that apply.]
	[x] Mutual exclusion
	[ ] User access
	[x] Hold and wait
	[ ] Resource unavailability
	[x] Circular wait
	[x] No pre-emption	
	
24. Question : In the given code, which of the following is being defined?
		01 package com.skillsoft.concurrency;
		02
		03 import java.util.concurrent.locks.Lock;
		04 import java.util.concurrent.locks.ReentrantLock;
		05
		06 public class ResourceOne {
		07
		08 }
	[ ] A function
	[x] An interface
	[ ] A class
	[ ] A method	

25. Using recursion, you have written the following code:
		16
		17 public static void main(String[] args) {
		18
		19 Node<String> a = new Node<>(“Alice”);
		20 Node<String> b = new Node<>(“Bob”);
		21 Node<String> c = new Node<>(“Charles”);
		22 Node<String> d = new Node<>(“Dora”);
		23 Node<String> e = new Node<>(“Elsa”);
		24 Node<String> f = new Node<>(“Fiona”);
		25 Node<String> g = new Node<>(“Greg”);
		26 Node<String> h = new Node<>(“Harry”);
		27 Node<String> i = new Node<>(“Irene”);
		28
		29 a.setLeftChild(b);
		30 a.setRightChild(c);
		31
		32 b.setLeftChild(d);
		33 b.setRightChild(e);
		34
		35 System.out.println();
		36 System.out.println(“Tree with nodes countNodes: “ + countNodes(a));
		37 }
		38
		39 }
		40
		41
	If A is the root node, what is the count of immediate sub-trees are you likely to get?
	[ ] 1
	[x] 5
	[ ] 3
	[ ] 0	

26. On line 27, what is the intent of using the acquire method?
		19 @Override
		20 public void run() {
		21
		22 try {
		23 threadName = Thread.currentThread().getName();
		24
		25 System.out.println(threadName + " is waiting for " + numPermits + " sem permits…”);
		26
		27 sem.acquire(numPermits);
		28
		29 System.out.println(threadName + " has ACQUIRED “ + numPermits + “ permits! “);
		30
		31 // Do work
		32 Thread.steep((long)(Math.random() * 1000) * 5);
		33
		34 sem.release(numPermits);
		35
		36 System.out.println(threadName + “ has RELEASED “ + numPermits + “ permits.”);
		37 }
		38 catch (InterruptedException e) {
		39 e. printStackTrace();
		40 }
		41
		42 }
	[ ] It is limiting the number of permits for threads
	[x] It is setting the number of permits it needs
	[ ] It is requesting for one permit
	[ ] It is defining the number of permits that it has acquired	
	
27. When counting the number of nodes in a binary tree, which of the node is always counted as the starting point?
	[ ] The left sub-tree
	[ ] The children of a sub-tree
	[x] The root node
	[ ] The right sub-tree	
	
28. Which type of shutdown of the executor service is performed with the following command:
		executorService.shutdown();
	[ ] Immediate
	[ ] Abrupt
	[ ] Slow
	[x] Graceful	
	
29. In the Depth-first traversal, how many sub-trees are involved with a recursive step?
	[ ] 1
	[ ] 3
	[x] 2
	[ ] 4
	[ ] As many as required	
	
30. Which of the following statements describe the properties of multi-threading? [Choose all that apply.]
	[x] Concurrent threads are in a partially completed state
	[x] Multiple tasks are executed concurrently by the same process
	[ ] Switching between tasks is a time-consuming process
	[ ] The threads share the same context and run with each other
	[x] Only one thread is being worked on at any given time	
	
31. Which type of graph has a positive or negative number assigned to each Edge?
	[ ] Numbered
	[ ] Undirected
	[x] Weighted
	[ ] Directed	

32. Which of the following is the benefit of using ExecutorService?
	[ ] It allows the threads to be initialized concurrently
	[ ] It sets the minimum number of threads that can run in parallel
	[ ] It limits the total number of threads that it can run
	[x] It provides a hard upper limit on the number of concurrent threads that it can run	
	
33. You have a Binary Search Tree in which there are a root node and several other nodes with their children. You want to search for a specific node, whether it is present in the Binary Search Tree. To be able to do this, which of the following task must you need to perform?
	[ ] Start with the leaf node and keep searching through every node
	[ ] Select each node and compare with the node that you are searching for
	[x] Compare the node to be inserted with the root of the tree
	[ ] Compare the node with the nodes in the left and right side	
	
34. You are developing a multi-threaded application in Java where you wish to update on a variable and immediately read the updated value. However, you do not want the performance to be impacted.
	Which of the following should be the best solution in this scenario?
	[ ] Create a parent function with the variable
	[ ] Create another class and link the variable to it
	[x] Use built-in Atomic variables
	[ ] Implement variable locking	
	
35. Which type of Depth-first traversal will always process the node first before its left and right sub-trees?
	[x] Pre-order
	[ ] In-order
	[ ] Post-order
	[ ] After-order	
	
36. The heap property allows the binary to be represented as which of the following?
	[ ] Constraints
	[ ] Variable
	[x] Array
	[ ] Binary Tree	
	
37. Which of the following is going to be the outcome if a thread is granted exclusive access to a resource? [Choose all that apply.]
	[ ] There is no performance issue in accessing resources
	[x] The output of the application is consistent
	[ ] The resources are no longer available to other threads
	[x] There are no race conditions	
	
38. After you create a new Java project in Eclipse IDE, what is the next task you must perform?
	[ ] Set the package name
	[ ] Set the interfaces
	[x] Create a class
	[ ] Define the name for the project	
	
39. Question: What is the intent of line 29 in this code?
		25 public static void main(String[] args) {
		26
		27 Thread walkThread = new Thread(new Walk());
		28
		29 System.out.println(“isAlive state of walkThread after init: “ + walkThread.isAlive));
		30
		31
		32 try {
		33 walkThread.join();
		34 System.out.println(“isAlive state of walkThread after start: “ + walkThread.isAlive));
		35
		36 walkThread.join();
		37 System.out.println(“isAlive state of walkThread after join: “ + walkThread.isAlive));
		38
		39 }
		40 catch (InterruptedException e) {
		41 e.printStackTrace();
		42 }
		43 }
	[ ] It checks if the thread is initialized after it has been started
	[x] It checks if the thread is alive before it is started but after it has been initialized
	[ ] It checks if the thread is alive and initialized after it is started
	[ ] It checks if the thread is alive after it is started but after it has been initialized	

40. In the Depth-first in-order traversal, which of the following node or a sub-tree is processed first in a binary tree?
	[x] The left sub-tree
	[ ] The children of a sub-tree
	[ ] The right sub-tree
	[ ] The root node	

41. Question: What will be the outcome of the given code if the left sub-tree is Null?
		01 package com.skillsoft.datastructures;
		02
		03 public class Main {
		04
		05 public static <T> void mirror(Node<T> root) {
		06
		07 if (root == null) {
		08 return;
		09 }
		10
		11 Node<T> temporary = root.getLeftChild();
		12
		13 root.setLeftChild(root.getRightChild());
		14 root.setRightChild(temporary);
		15
		16 mirror(root.getLeftChild());
		17 mirror(root.getRightChild());
		18 }
		19
		20 public static void main(String[] args) {
		21
		22 }
		23
		24 }
		25
	[x] It will still be swapped
	[ ] The right node will duplicate itself to the left node
	[ ] An error will be generated
	[ ] A temporary left sub-tree will be created and swapped	
	
42. You have a Binary Search Tree in which there are a root node and several other nodes with their children. You need to insert a new node into the Binary Search Tree. To be able to do this, which of the following task must you need to perform?
	[ ] Remove the root node from the Binary Search Tree
	[ ] Compare the node with the nodes in the left and right side
	[x] Compare the node to be inserted with the root of the tree
	[ ] Add the node as the leaf node in the Binary Search Tree	
	
43. In a graph, which of the following statement describes the role of Edge?
	[ ] It is used to model entities
	[x] It is used to model the relationships
	[ ] It is used to model the graph structure
	[ ] It is used to model the boundaries	
	
44. Question: When executing tasks in a linear fashion, which of the following is the outcome?
	[x] Each task is finished, and then the next one is started
	[x] There is no time gap between the two tasks
	[x] Some tasks require long waits where you are inactive
	[ ] There is less time wastage
	[ ] There is the assured result of each task completed	
	
45. Question: With the given code, what happens if the lock is not acquired on ResourceOne in 10 seconds?
		01 package com.skillsoft.concurrency;
		02
		03 import java.util.concurrent.TimeUnit;
		04
		05 public class FirstTask implements Runnable {
		06
		07 ResourceOne rOne;
		08 ResourceTwo rTwo;
		09
		10 public FirstTask(ResourceOne rl, ResourceTwo r2) {
		11 this.rOne = rl;
		12 this.rTwo = r2;
		13 }
		14
		15 @Override
		16 public void run() {
		17
		18 try {
		19
		20 boolean rOneLockAcquired = rOne.rOneLock.tryLock(10, TimeUnit.SECONDS);
		21
		22
		23 if (rOneLockAcquired) {
		24
		25 System.out.println(“Lock acquired on ResourceOne by “ + Thread.currentThread().getName());
		26
	[ ] The lock is acquired automatically in 10 seconds
	[ ] The code execution is halted, and the rest of the code is not processed
	[x] The instance will wait for the lock to be available
	[ ] The instance will move ahead without acquiring the lock	
	
46. When referring to Directed Acyclic Graphs (DAGs), which of the tasks are completed first?
	[ ] Parent tasks
	[ ] Child tasks of a parent
	[ ] Randomly selected task
	[x] Independent tasks	
	
47. Which of the following statements are true for the adjacency matrix? [Choose all that apply.]
	[x] Each cell represents the relationship between the vertices
	[ ] A matrix can be anything, including a table
	[ ] The row and column labels represent edges
	[x] It uses a matrix with rows and columns	
	
48. Question : You need to execute the following code:
		09
		10 try {
		11 Thread.sleep(3000);
		12 }
		13 catch (InterruptedException e) {
		14 e.printStackTrace();
		15 }
		16
		17 System.out.println(“i : “ + i);
		18
		19 }
		20 }
		21
		22 public static void main(String[] args){
		23
		24 Thread firstThread = new Thread(new MyThread());
		25 Thread secondThread = new Thread(new MyThread());
		26
		27 firstThread.start();
		28 secondThread.start();
		29
		30 firstThread.start();
		31 }
	What will be the outcome when this code is executed?
	[x] The IllegalStateException is thrown
	[ ] One single thread will run
	[ ] One thread will run and finish and then second will start
	[ ] Two threads will run in parallel	
	
49. You have implemented the semaphore mechanism on a video server. If the limit for a particular resource has reached, what is likely to happen if there is a task that requests its access?
	[ ] The counter for the resource will decrement, and access is granted
	[ ] The task will be granted access to the resource
	[x] The task will wait for its turn to access the resource
	[ ] The priority for the task will be raised, and immediate access is granted	
	
50. In the binary heap, when an element is inserted, at which position is it going to be placed?
	[ ] It will be placed at a specified location
	[ ] It will be randomly placed anywhere in the tree
	[x] It will be placed as a leaf node
	[ ] It will be placed as a root node	
	
51. Which of the following Sort is considered to be highly efficient and uses the divide and conquer approach?
	[ ] Quick Sort
	[x] Insertion Sort
	[ ] Shell Sort
	[ ] Selection Sort
	[ ] Bubble Sort	
	
52. Question: Which of the following statement is true for the given code?
		01 package com.skillsoft.concurrency;
		02
		03 public class Synchronization implements Runnable {
		04
		05 private static int myNum;
		06
		07 private static final int NUM_ITERATIONS = 10;
		08
		09 public static class CommonCounter {
		10
		11 public static void incrementCounter() {
		12 myNum++;
		13 }
		14 }
		15
		16 @Override
		17 public void run() {
		18 for (int i = 0; i < NUM_ITERATIONS; i++) {
		19 CommonCounter.incrementCounter();
		20 }
		21 }
		22
		23 public static void main(String[] args) {
		24
		25 Thread threadOne = new Thread(new Synchronization());
		26 Thread threadTwo = new Thread(new Synchronization());
		27
		28 System.out.println("Start value of myNum: “ + myNum);
		29
		30 try {
		31 threadOne.start();
		32 threadTwo.start();
		33
		34 Thread.sleep(5000);
		35 } catch (InterruptedException e) {
		36 e.printStackTrace();
		37 }
	[ ] There will be multiple instances of Synchronization class that will run in a queue to update static myNum integer
	[ ] There will be one instance of Synchronization class that will update the static myNum integer
	[x] There will be multiple instances of Synchronization class that will compete to update static myNum integer
	[ ] There will be multiple instances of Synchronization class that will wait for others to update static myNum integer	
	
53. Question: In which of the following cases will the synchronized block on line 29 will be executed?
		15 public void consume() throws InterruptedException {
		16
		17 synchrosized(sharedQueue) {
		18
		19 if (sharedQueue.queue.size() == 0) {
		20
		21 System.out.println(“Queue is empty. “ + consumerName + “ is waiting…”);
		22
		23 sharedQueue.wait();
		24
		25 System.out.println(consumerName + “ has waken up”);
		26 }
		27 }
		28
		29 synchrosized(sharedQueue) {
		30
		31 String item = sharedQueue.queue.remove();
		32
		33 System.out.println(consumerName + “ has consumed” + item);
		34
		35 sharedQueue.notify();
		36 }
		37
		38 }
	[x] If the queue was not full
	[ ] If there was no queue
	[ ] If the queue was full completely
	[ ] If there were items in the queue	
	
54. In the Depth-first post-order traversal, which of the following node or sub-tree is processed first in a binary tree?
	[x] The sub-trees of a root node
	[ ] The children of a sub-tree
	[ ] The left sub-tree
	[ ] The right sub-tree
	[ ] The root node	
	
55. Which of the following statements are correct for a binary tree? [Choose all that apply.]
	[x] A tree is used to represent hierarchical information
	[ ] Each node in a tree can point to only one node
	[ ] A tree has a structure that is similar to queues
	[x] A tree represents a non-linear data structure
	[x] The order of elements in a tree is not important	
	
56. Question : You have written the following code:
		02
		03 public class Main {
		04
		05 public static void main(String[] args) {
		06
		07 Graph graph = new AdjacencyMatrixGraph(8);
		08
		09 graph.addEdge(1, 0);
		10 graph.addEdge(1, 2);
		11 graph.addEdge(1, 5);
		12
		13 graph.addEdge(3, 4);
		14
		15 graph.addEdge(2, 7);
		16 graph.addEdge(2, 4);
		17 graph.addEdge(2, 3);
		18
		19 graph.addEdge(5, 6);
		20
		21 graph.addEdge(6, 3);
		22
		23 graph.displayGraph();
	Based on the given code, how many outgoing does the vertex 2 have?
	[ ] 1
	[ ] 5
	[ ] 0
	[x] 3	
	
57. In which type of Sort will you compare each element first with its neighbors and swap the elements so that the smaller one is earlier in the list?
	[ ] Shell Sort
	[ ] Quick Sort
	[ ] Selection Sort
	[x] Bubble Sort	
	
58. Question: You need to execute the following code:
		01 package com.skillsoft.concurrency;
		02
		03 public class MyThread implements Runnable {
		04
		05 @Override
		06 public void run() {
		07
		08 for (int i = 1; i < 5; i++) {
		09
		10 System.out.println(“i: “ + i);
		11
		12 }
		13 }
		14
		15 public static void main(String[] args) {
		16
		17 Thread myThread = new Thread(new MyThread()) ;
		18
		19 myThread.start();
		20 }
		21
		22
	What is likely to be the output of the run() on line 6?
	[x] It will print i : 1 i : 2 i : 3 i : 4
	[ ] It will print i : 1 i : 2 i : 3 i : 4 I : 5
	[ ] It will print i : 4
	[ ] It will print i : 5	

59. Question: You have the following code:
		05 public static <T> int maxDepth(Node<T> root) {
		06
		07 if (root == null) {
		08. return 0;
		09 }
		10
		11 if (root.getLeftChild() == null && root.getRightChild() == null) {
		12
		13. System.out.println(root + " maxDepth: " + 0);
		14
		15 return 0;
		16 }
		17
		18 int leftMaxDepth = maxDepth(root.getLeftChild());
		19 int rightMaxDepth = maxDepth(root.getRightChild());
		20
		21 int maxDepth = 1 + Math.max(leftMaxDepth, rightMaxDepth);
		22
		23 System.out.println( root +
		24 “ left maxDepth: " + leftMaxDepth +
		25 " right maxDepth: " + rightMaxDepth +
		26 “ current maxDepth: “ + + maxDepth) ;
		27
		28 return maxDepth;
		29 }
	What will be the outcome if the root has left and right sub-trees, but further, they do not have any sub-trees?
	[x] The maxDepth will be returned as 1
	[ ] The maxDepth will return 0
	[ ] The maxDepth will return 1+0
	[ ] The code will generate an error	
	
60. Which type of shutdown of the executor service is performed with the following command:
		executorService.shutdownNow();
	[ ] Abrupt
	[x] Immediate
	[ ] Slow
	[ ] Graceful	
	
	
	